apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin
  namespace: crystalshards
  labels:
    app: admin
    tier: admin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin
  template:
    metadata:
      labels:
        app: admin
        tier: admin
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "4000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: admin
        image: gcr.io/PROJECT_ID/crystalshards-admin:latest
        ports:
        - containerPort: 4000
          name: http
        env:
        - name: DATABASE_URL_REGISTRY
          value: "postgresql://crystalshards:password@postgresql-cluster:5432/crystalshards_production"
        - name: DATABASE_URL_DOCS
          value: "postgresql://crystalshards:password@postgresql-cluster:5432/crystaldocs_production"
        - name: DATABASE_URL_GIGS
          value: "postgresql://crystalshards:password@postgresql-cluster:5432/crystalgigs_production"
        - name: REDIS_URL
          value: "redis://redis-cluster:6379/4"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: admin-secrets
              key: jwt-secret
        - name: ADMIN_USERNAME
          valueFrom:
            secretKeyRef:
              name: admin-secrets
              key: admin-username
        - name: ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: admin-secrets
              key: admin-password
        - name: PORT
          value: "4000"
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 4000
          initialDelaySeconds: 10
          periodSeconds: 5
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 1000

---
apiVersion: v1
kind: Service
metadata:
  name: admin
  namespace: crystalshards
  labels:
    app: admin
spec:
  selector:
    app: admin
  ports:
  - name: http
    port: 80
    targetPort: 4000
  type: ClusterIP

---
apiVersion: v1
kind: Secret
metadata:
  name: admin-secrets
  namespace: crystalshards
type: Opaque
stringData:
  jwt-secret: "admin_super_secret_jwt_key_change_in_production_with_random_value"
  admin-username: "admin"
  admin-password: "change_me_in_production"

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: admin-ingress
  namespace: crystalshards
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - admin.crystalshards.org
    secretName: admin-tls
  rules:
  - host: admin.crystalshards.org
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: admin
            port:
              number: 80