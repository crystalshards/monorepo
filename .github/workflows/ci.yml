name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  CRYSTAL_VERSION: "1.10.1"

jobs:
  # Test simple deployable apps
  test:
    name: Test Simple Apps
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Crystal
      uses: crystal-lang/install-crystal@v1
      with:
        crystal: ${{ env.CRYSTAL_VERSION }}

    - name: Build simple-registry
      working-directory: ./apps/simple-registry
      run: |
        echo "Building simple-registry..."
        crystal build src/simple-registry.cr
        echo "Build successful!"
        
    - name: Test simple-registry
      working-directory: ./apps/simple-registry
      run: |
        echo "Testing simple-registry compilation..."
        crystal build --no-codegen src/simple-registry.cr
        echo "Compilation test passed!"

    - name: Build simple-lucky-registry
      working-directory: ./apps/simple-lucky-registry
      run: |
        echo "Building simple-lucky-registry..."
        if [ -f "shard.yml" ]; then
          shards install --production
          crystal build src/simple-lucky-registry.cr
          echo "Build successful!"
        else
          echo "No shard.yml found for simple-lucky-registry, skipping"
        fi
        
    - name: Test simple-lucky-registry
      working-directory: ./apps/simple-lucky-registry
      run: |
        if [ -f "shard.yml" ]; then
          echo "Testing simple-lucky-registry compilation..."
          crystal build --no-codegen src/simple-lucky-registry.cr
          echo "Compilation test passed!"
        else
          echo "No shard.yml found for simple-lucky-registry, skipping"
        fi

    - name: Format check for simple apps
      run: |
        echo "Checking Crystal formatting for simple apps..."
        crystal tool format --check apps/simple-registry/src/
        if [ -d "apps/simple-lucky-registry/src" ]; then
          crystal tool format --check apps/simple-lucky-registry/src/
        fi


  # Security scanning
  security:
    name: Security Scanning
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
      continue-on-error: true

  # Terraform validation
  terraform:
    name: Terraform Validation
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.0
    
    - name: Terraform Format
      working-directory: ./terraform
      run: terraform fmt -check

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: Terraform Validate
      working-directory: ./terraform
      run: terraform validate